// Generated by https://quicktype.io

export interface PaymentResponse {
  count: number;
  page: number;
  totalPages: number;
  data: Payment[];
}

export interface Payment {
  transaction: Transaction;
  user: User;
  card: Card;
  createdAt: string;
  updatedAt: string;
  id: string;
}

export interface Card {
  bin: string;
  origin: Origin;
  holder_name: string;
  type: Type;
  number: string;
}

export enum Origin {
  Paymentez = 'Paymentez',
}

export enum Type {
  Mc = 'mc',
  Vi = 'vi',
}

export interface Transaction {
  status: number;
  lot_number?: string;
  order_description: string;
  authorization_code?: string;
  status_detail: number;
  terminal_code: TerminalCode;
  date: string;
  message: Message;
  id: string;
  ltp_id: string;
  payment_method_type: string;
  dev_reference: DevReference;
  carrier_code: CarrierCode;
  current_status: CurrentStatus;
  amount: number;
  paid_date: string;
  installments: number;
  trace_number?: string;
  installments_type: InstallmentsType;
  stoken: string;
  application_code: string;
}

export enum CarrierCode {
  ReversedByMerchant = 'ReversedByMerchant',
  ReviewByKount = 'ReviewByKount',
  The00 = '00',
}

export enum CurrentStatus {
  Approved = 'APPROVED',
  Cancelled = 'CANCELLED',
  Pending = 'PENDING',
}

export enum DevReference {
  Baria = 'baria',
}

export enum InstallmentsType {
  RevolvingCredit = 'Revolving credit',
}

export enum Message {
  Empty = '',
  ResponseByMock = 'Response by mock',
  ReverseByMock = 'Reverse by mock',
}

export enum TerminalCode {
  Pw230765 = 'PW230765',
}

export interface User {
  id: string;
  email: string;
}
